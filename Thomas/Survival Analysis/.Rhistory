library(survival)
library(foreign)
################################
#Ch 4 Practice Questions
################################
#Read vets dataset
#File Layout
# Column 1: Treatment (standard = 1, test = 2)
# Column 2: Cell type 1 (large = 1, other = 0)
# Column 3: Cell type 2 (adeno = 1, other = 0)
# Column 4: Cell type 3 (small = 1, other = 0)
# Column 5: Cell type 4 (squamous = 1, other = 0)
# Column 6: Survival time (days)
# Column 7: Performance status (0 = worst, ..., 100 = best)
# Column 8: disease duration (months)
# Column 9: Age
# Column 10: Prior therapy (none = 0, some = 10)
# Column 11: Status (0 = censored, 1 = died)
dsVets <- read.dta("http://web1.sph.emory.edu/dkleinb/allDatasets/surv2datasets/vets.dta")
names(dsVets)<-c("Treatment", "LargeCell", "AdenoCell", "SmallCell", "SquamousCell", "SurvivalTime", "PerformanceStatus",
"DiseaseDuration", "Age", "PriorTherapy", "Status")
dsAddicts<- read.dta("http://web1.sph.emory.edu/dkleinb/allDatasets/surv2datasets/addicts.dta")
names(dsAddicts)<-c("Subject", "Clinic", "Status", "SurvivalTime", "Prison", "Dose")
#Test Question 1
Ch4Test1 <- coxph(Surv(SurvivalTime, Status) ~ Clinic + Prison + Dose, ties="breslow", data=dsAddicts)
summary(Ch4Test1)
Ch4Test1Poisson <- glm(Status ~ Clinic + Prison + Dose + offset(log(SurvivalTime)), (family=poisson), data=dsAddicts)
summary(Ch4Test1Poisson)
dsAddicts$SurvivalTime(dsAddicts$Status==1)
dsAddicts$SurvivalTime[dsAddicts$Status==1]
unique(dsAddicts$SurvivalTime[dsAddicts$Status==1])
length(unique(dsAddicts$SurvivalTime[dsAddicts$Status==1]))
eventTimes <- unique(dsAddicts$SurvivalTime[dsAddicts$Status==1])
eventTimes
eventTimes <- eventTimes[order(eventTimes)]
eventTimes
?ddply
require(plyr)
?ddply
View(dsAddicts)
colnames(dsAddicts)
createPTable <- function(d){
for(i in 1:length(eventTimes)){
d[i,"tr"] <- eventTimes[i]
if(d$SurvivalTime %in% eventTimes[i] & d$Status %in% 1) break
}
return(d)
}
ddply(data=dsAddicts[1:3,],.variables=.(Subject),.fun = createPTable)
ddply(.data=dsAddicts[1:3,],.variables=.(Subject),.fun = createPTable)
createPTable <- function(d){
for(i in 1:length(eventTimes)){
dNew[i,] <- d
dNew[i,"tr"] <- eventTimes[i]
if(d$SurvivalTime %in% eventTimes[i] & d$Status %in% 1) break
}
return(dNew)
}
ddply(.data=dsAddicts[1:3,],.variables=.(Subject),.fun = createPTable)
createPTable <- function(d){
dNew <- d
for(i in 1:length(eventTimes)){
dNew[i,] <- d
dNew[i,"tr"] <- eventTimes[i]
if(d$SurvivalTime %in% eventTimes[i] & d$Status %in% 1) break
}
return(dNew)
}
ddply(.data=dsAddicts[1:3,],.variables=.(Subject),.fun = createPTable)
eventTimes
createPTable <- function(d){
dNew <- d
for(i in 1:length(eventTimes)){
dNew[i,] <- d
dNew[i,"tr"] <- eventTimes[i]
dNew[i,"yir"] <- 0
if(d$SurvivalTime %in% eventTimes[i] & d$Status %in% 1) {
dNew[i,"yir"] <- 1
break
}
}
return(dNew)
}
ddply(.data=dsAddicts[1:3,],.variables=.(Subject),.fun = createPTable)
createPTable <- function(d){
dNew <- d
for(i in 1:length(eventTimes)){
dNew[i,] <- d
dNew[i,"tr"] <- eventTimes[i]
dNew[i,"dir"] <- ifelse(i==1,eventTimes[i],eventTimes[i]-eventTimes[i-1])
dNew[i,"yir"] <- 0
if(d$SurvivalTime %in% eventTimes[i] & d$Status %in% 1) {
dNew[i,"yir"] <- 1
break
}
}
return(dNew)
}
ddply(.data=dsAddicts[1:3,],.variables=.(Subject),.fun = createPTable)
source('~/.active-rstudio-document', echo=TRUE)
ptProcessDat
ptProcessDat <- ddply(.data=dsAddicts,.variables=.(Subject),.fun = createPTable)
dim(ptProcessDat)
Ch4Test1PoissonNew <- glm(yir ~ Clinic + Prison + Dose + offset(log(dir)), (family=poisson), data=ptProcessDat)
Ch4Test1PoissonNew <- glm(yir ~ Clinic + Prison + Dose + offset(log(dir)) + I(as.factor(r)), (family=poisson), data=ptProcessDat)
summary(Ch4Test1PoissonNew)
Ch4Test1Poisson <- glm(SurvivalTime ~ Clinic + Prison + Dose + offset(log(Dose)) - 1, (family=poisson), data=dsAddicts)
Ch4Test1PoissonNew <- glm(yir ~ Clinic + Prison + Dose + offset(log(dir)) + I(as.factor(r)) - 1, (family=poisson), data=ptProcessDat)
summary(Ch4Test1PoissonNew)
Ch4Test1PoissonNew <- glm(yir ~ Clinic + Prison + Dose + offset((dir)) + I(as.factor(r)) - 1, (family=poisson), data=ptProcessDat)
summary(Ch4Test1PoissonNew)
Ch4Test1Poisson2 <- glm(Status ~ Clinic + Prison + Dose + offset(log(SurvivalTime)), (family=poisson), data=dsAddictsNew)
dsAddictsNew <- dsAddicts[!duplicated(dsAddicts$SurvivalTime),]
Ch4Test1Poisson2 <- glm(Status ~ Clinic + Prison + Dose + offset(log(SurvivalTime)), (family=poisson), data=dsAddictsNew)
summary(Ch4Test1Poisson2)
ptProcessDat <- ddply(.data=dsAddictsNew,.variables=.(Subject),.fun = createPTable)
dim(ptProcessDat)
Ch4Test1PoissonNew <- glm(yir ~ Clinic + Prison + Dose + offset(log(dir)) + I(as.factor(r)) - 1, (family=poisson), data=ptProcessDat)
summary(Ch4Test1PoissonNew)
Ch4Test1b <- coxph(Surv(SurvivalTime, Status) ~ Clinic + Prison + Dose, ties="breslow", data=dsAddictsNew)
summary(Ch4Test1b)
Ch4Test1PoissonNew <- glm(yir ~ I(as.factor(r)) + Clinic + Prison + Dose + offset(log(dir)) - 1, (family=poisson), data=ptProcessDat)
summary(Ch4Test1PoissonNew)
summary(Ch4Test1b)
Ch4Test1PoissonNew <- glm(yir ~ I(as.factor(r)) + Clinic + Prison + Dose + offset(dir) - 1, (family=poisson), data=ptProcessDat)
summary(Ch4Test1PoissonNew)
Ch4Test1PoissonNew <- glm(yir ~ I(as.factor(r)) + Clinic + Prison + Dose + offset(I(log(dir))) - 1, (family=poisson), data=ptProcessDat)
summary(Ch4Test1PoissonNew)
?glm
Ch4Test1PoissonNew <- glm(yir ~ I(as.factor(r)) + Clinic + Prison + Dose - 1, (family=poisson), data=ptProcessDat)
summary(Ch4Test1PoissonNew)
ptProcessDat
Ch4Test1b <- coxph(Surv(SurvivalTime, Status) ~ Dose, ties="breslow", data=dsAddictsNew) #Clinic + Prison +
summary(Ch4Test1b)
Ch4Test1PoissonNew <- glm(yir ~ I(as.factor(r)) + Clinic - 1 + offset(I(log(dir))), (family=poisson), data=ptProcessDat)
#+ Prison + Dose
summary(Ch4Test1PoissonNew)
summary(Ch4Test1b)
Ch4Test1b <- coxph(Surv(SurvivalTime, Status) ~ Clinic, ties="breslow", data=dsAddictsNew) #Clinic + Prison + Dose
summary(Ch4Test1b)
summary(Ch4Test1PoissonNew)
summary(Ch4Test1b)
Ch4Test1PoissonNew <- glm(yir ~ I(as.factor(r)) + Clinic - 1 + offset(I(log(dir))), family=poisson(), data=ptProcessDat)
summary(Ch4Test1PoissonNew)
Ch4Test1PoissonNew <- glm(yir ~ I(as.factor(r)) + Clinic - 1 + offset(I(log(dir))), family=poisson(link = "log"), data=ptProcessDat)
#+ Prison + Dose
summary(Ch4Test1PoissonNew)
ptProcessDat$rFact <- as.factor(ptProcessDat$r)
ptProcessDat$rFact
summary(Ch4Test1PoissonNew)
ptProcessDat$rFact[ptProcessDat$rFact %in% 115]
ptProcessDat$r[ptProcessDat$r %in% 115]
table(ptProcessDat$yir[ptProcessDat$rFact %in% 115],useNA="ifany")
?order
head(dsAddicts[order(dsAddicts$SurvivalTime,-dsAddicts$Status),])
createPTable <- function(d){
dNew <- d
for(i in 1:length(eventTimes)){
dNew[i,] <- d
dNew[i,"r"] <- i
dNew[i,"tr"] <- eventTimes[i]
dNew[i,"dir"] <- ifelse(i==1,eventTimes[i],min(d$SurvivalTime,eventTimes[i]) - eventTimes[i-1])
dNew[i,"yir"] <- 0
if(d$SurvivalTime <= eventTimes[i]) {
if(d$Status %in% 1) dNew[i,"yir"] <- 1
break
}
}
return(dNew)
}
head(dsAddicts[order(dsAddicts$SurvivalTime,-dsAddicts$Status),])
dsAddictsOrd <- dsAddicts[order(dsAddicts$SurvivalTime,-dsAddicts$Status),]
dsAddictsOrd$Subject[duplicated(dsAddictsOrd)]
dsAddictsOrd <- dsAddicts[order(dsAddicts$SurvivalTime,-dsAddicts$Status),]
dsAddictsOrd$Subject[duplicated(dsAddictsOrd)]
dsAddictsOrd$Subject
dsAddictsOrd$Subject[duplicated(dsAddictsOrd$SurvivalTime)]
dupIds <- dsAddictsOrd$Subject[duplicated(dsAddictsOrd$SurvivalTime)]
dsAddictOrd[dsAddictsOrd$Subject %in% dupIds,]
dsAddictsOrd[dsAddictsOrd$Subject %in% dupIds,]
duplicated(dsAddictsOrd$SurvivalTime)
dupIds <- dsAddictsOrd$SurvivalTime[duplicated(dsAddictsOrd$SurvivalTime)]
dsAddictsOrd[dsAddictsOrd$SurvivalTime %in% dupIds,]
dsAddictsNew <- dsAddictsOrd[!duplicated(dsAddictsOrd$SurvivalTime),]
ptProcessDat <- ddply(.data=dsAddictsNew,.variables=.(Subject),.fun = createPTable)
dim(ptProcessDat)
head(ptProcessDat)
ptProcessDat[ptProcessDat$Subject %in% c(166,111),]
createPTable <- function(d){
dNew <- d
for(i in 1:length(eventTimes)){
dNew[i,] <- d
dNew[i,"r"] <- i
dNew[i,"tr"] <- eventTimes[i]
dNew[i,"dir"] <- ifelse(i==1,min(d$SurvivalTime,eventTimes[i]),min(d$SurvivalTime,eventTimes[i]) - eventTimes[i-1])
dNew[i,"yir"] <- 0
if(d$SurvivalTime <= eventTimes[i]) {
if(d$Status %in% 1) dNew[i,"yir"] <- 1
break
}
}
return(dNew)
}
ptProcessDat <- ddply(.data=dsAddictsNew,.variables=.(Subject),.fun = createPTable)
dim(ptProcessDat)
ptProcessDat[ptProcessDat$Subject %in% c(166,111),]
eventTimes
Ch4Test1PoissonNew <- glm(yir ~ I(as.factor(r)) + Clinic - 1 + offset(I(log(dir))), family=poisson(link = "log"), data=ptProcessDat)
#+ Prison + Dose
summary(Ch4Test1PoissonNew)
summary(Ch4Test1b)
Ch4Test1b <- coxph(Surv(SurvivalTime, Status) ~ Clinic, ties="breslow", data=dsAddictsNew) #Clinic + Prison + Dose
summary(Ch4Test1b)
summary(Ch4Test1PoissonNew)
summary(Ch4Test1b)
Ch4Test1PoissonNew <- glm(yir ~ I(as.factor(r)) + Clinic + offset(I(log(dir))), family=poisson(link = "log"), data=ptProcessDat)
#+ Prison + Dose
summary(Ch4Test1PoissonNew)
summary(Ch4Test1b)
Ch4Test1b <- coxph(Surv(SurvivalTime, Status) ~ Clinic, ties="breslow", data=dsAddictsNew) #Clinic + Prison + Dose
summary(Ch4Test1b)
Ch4Test1b <- coxph(Surv(SurvivalTime, Status) ~ Clinic + Prison + Dose, ties="breslow", data=dsAddictsNew) #Clinic + Prison + Dose
summary(Ch4Test1b)
Ch4Test1PoissonNew <- glm(yir ~ I(as.factor(r)) + Clinic + Prison + Dose + offset(I(log(dir))), family=poisson(link = "log"), data=ptProcessDat)
#+ Prison + Dose
summary(Ch4Test1PoissonNew)
summary(Ch4Test1b)
ptProcessDat <- ddply(.data=dsAddicts,.variables=.(Subject),.fun = createPTable)
dim(ptProcessDat)
Ch4Test1PoissonNew <- glm(yir ~ I(as.factor(r)) + Clinic + Prison + Dose + offset(I(log(dir))), family=poisson(link = "log"), data=ptProcessDat)
#+ Prison + Dose
summary(Ch4Test1PoissonNew)
Ch4Test1b <- coxph(Surv(SurvivalTime, Status) ~ Clinic + Prison + Dose, ties="breslow", data=dsAddicts) #Clinic + Prison + Dose
summary(Ch4Test1b)
summary(Ch4Test1PoissonNew)
summary(Ch4Test1b)
?coxph
