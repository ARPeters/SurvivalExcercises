# Tx2<-list()
# length(Tx2)<-length(ptProcessChemo$yir)
#
#
# for(i in 1:length(ptProcessChemo$rx)){
#   Tx2[i]<-ifelse(250<=ptProcessChemo$tr[i] & ptProcessChemo$tr[i]<500, ptProcessChemo$rx[i]*1, 0)
# }
#
# Tx3<-list()
# length(Tx3)<-length(ptProcessChemo$yir)
#
#
# for(i in 1:length(ptProcessChemo$rx)){
#   Tx3[i]<-ifelse(ptProcessChemo$tr[i]>=500, ptProcessChemo$rx[i]*1, 0)
# }
#
# ptProcessChemo<-cbind(ptProcessChemo, as.numeric(unlist(Tx1)),  as.numeric(unlist(Tx2)),  as.numeric(unlist(Tx3)))
# colnames(ptProcessChemo)<-c("subject", "rx", "status", "survt", "r", "tr", "dir", "yir","Time1", "Time2", "Time3")
ptProcessChemo$Time1 <- ifelse(ptProcessChemo$tr<250, ptProcessChemo$rx*1, 0)
ptProcessChemo$Time2 <- ifelse(250<=ptProcessChemo$tr & ptProcessChemo$tr<500, ptProcessChemo$rx*1, 0)
ptProcessChemo$Time3 <- ifelse(ptProcessChemo$tr>=500, ptProcessChemo$rx*1, 0)
head(ptProcessChemo)
View(ptProcessChemo)
unique(ptProcessChemo$rx)
unique(ptProcessChemo$Time1)
ptProcessChemo$Time2 <- ifelse(250<=ptProcessChemo$tr, ptProcessChemo$rx*1, 0)
poissonChemo3<-glm(yir ~ I(as.factor(r)) + Time1 + Time2 + offset(I(log(dir))), family=poisson(link = "log"), data=ptProcessChemo)
summary(poissonChemo3)
summary(ChemoPh4)
summary(ChemoPh2)
Chemo.cp250$start
?survSplit
View(ptProcessChemo)
View(ptProcessChemo)
View(ptProcessChemo)
ptProcessChemo[ptProcessChemo$subject %in% 24,]
ptProcessChemo[ptProcessChemo$subject %in% 24,]
ptProcessChemo$Time1 <- ifelse(ptProcessChemo$tr<=250, ptProcessChemo$rx*1, 0)
ptProcessChemo$Time2 <- ifelse(250<ptProcessChemo$tr, ptProcessChemo$rx*1, 0)
poissonChemo3<-glm(yir ~ I(as.factor(r)) + Time1 + Time2 + offset(I(log(dir))), family=poisson(link = "log"), data=ptProcessChemo)
summary(poissonChemo3)
ptProcessChemo$Time1 <- ifelse(ptProcessChemo$tr<250, ptProcessChemo$rx*1, 0)
ptProcessChemo$Time2 <- ifelse(250<=ptProcessChemo$tr, ptProcessChemo$rx*1, 0)
poissonChemo3<-glm(yir ~ I(as.factor(r)) + Time1 + Time2 + offset(I(log(dir))), family=poisson(link = "log"), data=ptProcessChemo)
summary(poissonChemo3)
Chemo.cp250 <- survSplit(dsChemo, cut=250.1, end="SurvTime", event="Status", start="start", id="id")
Chemo.cp250$Time1 <- Chemo.cp250$Rx*(Chemo.cp250$start<250)
Chemo.cp250$Time2 <- Chemo.cp250$Rx*(Chemo.cp250$start>=250)
Y250=Surv(Chemo.cp250$start, Chemo.cp250$SurvTime, Chemo.cp250$Status)
ChemoPh2<-coxph(Y250~Time1 + Time2, data=Chemo.cp250)
summary(ChemoPh2)
Chemo.cp250 <- survSplit(dsChemo, cut=251, end="SurvTime", event="Status", start="start", id="id")
Chemo.cp250$Time1 <- Chemo.cp250$Rx*(Chemo.cp250$start<250)
Chemo.cp250$Time2 <- Chemo.cp250$Rx*(Chemo.cp250$start>=250)
Y250=Surv(Chemo.cp250$start, Chemo.cp250$SurvTime, Chemo.cp250$Status)
ChemoPh2<-coxph(Y250~Time1 + Time2, data=Chemo.cp250)
summary(ChemoPh2)
eventTimes
Chemo.cp250 <- survSplit(dsChemo, cut=254, end="SurvTime", event="Status", start="start", id="id")
Chemo.cp250$Time1 <- Chemo.cp250$Rx*(Chemo.cp250$start<250)
Chemo.cp250$Time2 <- Chemo.cp250$Rx*(Chemo.cp250$start>=250)
Y250=Surv(Chemo.cp250$start, Chemo.cp250$SurvTime, Chemo.cp250$Status)
ChemoPh2<-coxph(Y250~Time1 + Time2, data=Chemo.cp250)
summary(ChemoPh2)
Chemo.cp250 <- survSplit(dsChemo, cut=251, end="SurvTime", event="Status", start="start", id="id")
#Chemo.cp250=Chemo.cp250[order(Chemo.cp250$id, Chemo.cp250$start,])]
Chemo.cp250$Time1 <- Chemo.cp250$Rx*(Chemo.cp250$start<250)
Chemo.cp250$Time2 <- Chemo.cp250$Rx*(Chemo.cp250$start>=250)
Y250=Surv(Chemo.cp250$start, Chemo.cp250$SurvTime, Chemo.cp250$Status)
ChemoPh2<-coxph(Y250~Time1 + Time2, data=Chemo.cp250)
library(survival)
library(foreign)
#rm(list=ls(all=TRUE))
################################
#CHAPTER 6: Test
################################
#File Layout
#  Column 1 = Rx (1=chemotherapy, 2=chemotherapy and radiation)
#  Column 2 = status (0=censored, 1=died)
#  Column 3 = survival time (days)
#Read Anderson dataset
dsChemo <- read.table("http://statweb.stanford.edu/~olshen/hrp262spring01/spring01Assignments/chemo.txt", skip = 17)
names(dsChemo)<-c("Rx", "Status", "SurvTime")
#Test dsChemo
#KM plots for each treatment group
kmfit1 <- survfit(Surv(SurvTime, Status==1)~Rx, data=dsChemo)
summary(kmfit1)
plot(kmfit1)
#Test 2
ChemoPh<-coxph(Surv(SurvTime, Status==1)~Rx, data=dsChemo, ties="breslow")
summary(ChemoPh)
#Test 6
#start at page 646 of text as a reference
#Chemo.cp=survSplit(dsChemo,cut=dsChemo$SurvTime[dsChemo$Status==1], end="SurvTime", event="Status", start="start", id="id")
Chemo.cp250 <- survSplit(dsChemo, cut=250.1, end="SurvTime", event="Status", start="start", id="id")
#Chemo.cp250=Chemo.cp250[order(Chemo.cp250$id, Chemo.cp250$start,])]
Chemo.cp250$Time1 <- Chemo.cp250$Rx*(Chemo.cp250$start<250)
Chemo.cp250$Time2 <- Chemo.cp250$Rx*(Chemo.cp250$start>=250)
Y250=Surv(Chemo.cp250$start, Chemo.cp250$SurvTime, Chemo.cp250$Status)
ChemoPh2<-coxph(Y250~Time1 + Time2, data=Chemo.cp250)
summary(ChemoPh2)
Chemo.cp250 <- survSplit(dsChemo, cut=251, end="SurvTime", event="Status", start="start", id="id")
#Chemo.cp250=Chemo.cp250[order(Chemo.cp250$id, Chemo.cp250$start,])]
Chemo.cp250$Time1 <- Chemo.cp250$Rx*(Chemo.cp250$start<250)
Chemo.cp250$Time2 <- Chemo.cp250$Rx*(Chemo.cp250$start>=250)
Y250=Surv(Chemo.cp250$start, Chemo.cp250$SurvTime, Chemo.cp250$Status)
ChemoPh2<-coxph(Y250~Time1 + Time2, data=Chemo.cp250)
summary(ChemoPh2)
Chemo.cp250 <- survSplit(dsChemo, cut=254, end="SurvTime", event="Status", start="start", id="id")
#Chemo.cp250=Chemo.cp250[order(Chemo.cp250$id, Chemo.cp250$start,])]
Chemo.cp250$Time1 <- Chemo.cp250$Rx*(Chemo.cp250$start<250)
Chemo.cp250$Time2 <- Chemo.cp250$Rx*(Chemo.cp250$start>=250)
Y250=Surv(Chemo.cp250$start, Chemo.cp250$SurvTime, Chemo.cp250$Status)
ChemoPh2<-coxph(Y250~Time1 + Time2, data=Chemo.cp250)
summary(ChemoPh2)
ptProcessChemo$Time1 <- ifelse(ptProcessChemo$tr<=254, ptProcessChemo$rx*1, 0)
ptProcessChemo$Time2 <- ifelse(254<=ptProcessChemo$tr, ptProcessChemo$rx*1, 0)
poissonChemo3<-glm(yir ~ I(as.factor(r)) + Time1 + Time2 + offset(I(log(dir))), family=poisson(link = "log"), data=ptProcessChemo)
summary(poissonChemo3)
ptProcessChemo$Time2 <- ifelse(254<ptProcessChemo$tr, ptProcessChemo$rx*1, 0)
poissonChemo3<-glm(yir ~ I(as.factor(r)) + Time1 + Time2 + offset(I(log(dir))), family=poisson(link = "log"), data=ptProcessChemo)
summary(poissonChemo3)
Chemo.cp250 <- survSplit(dsChemo, cut=251, end="SurvTime", event="Status", start="start", id="id")
Chemo.cp250$Time1 <- Chemo.cp250$Rx*(Chemo.cp250$start<250)
Chemo.cp250$Time2 <- Chemo.cp250$Rx*(Chemo.cp250$start>=250)
Y250=Surv(Chemo.cp250$start, Chemo.cp250$SurvTime, Chemo.cp250$Status)
ChemoPh2<-coxph(Y250~Time1 + Time2, data=Chemo.cp250)
summary(ChemoPh2)
ptProcessChemo$Time1 <- ifelse(ptProcessChemo$tr<=251, ptProcessChemo$rx*1, 0)
ptProcessChemo$Time2 <- ifelse(251<ptProcessChemo$tr, ptProcessChemo$rx*1, 0)
poissonChemo3<-glm(yir ~ I(as.factor(r)) + Time1 + Time2 + offset(I(log(dir))), family=poisson(link = "log"), data=ptProcessChemo)
summary(poissonChemo3)
summary(ChemoPh2)
Chemo.cp250 <- survSplit(dsChemo, cut=250.1, end="SurvTime", event="Status", start="start", id="id")
View(Chemo.cp250)
Chemo.cp250 <- survSplit(dsChemo, cut=249.99, end="SurvTime", event="Status", start="start", id="id")
#Chemo.cp250=Chemo.cp250[order(Chemo.cp250$id, Chemo.cp250$start,])]
Chemo.cp250$Time1 <- Chemo.cp250$Rx*(Chemo.cp250$start<250)
Chemo.cp250$Time2 <- Chemo.cp250$Rx*(Chemo.cp250$start>=250)
Y250=Surv(Chemo.cp250$start, Chemo.cp250$SurvTime, Chemo.cp250$Status)
ChemoPh2<-coxph(Y250~Time1 + Time2, data=Chemo.cp250)
summary(ChemoPh2)
Chemo.cp250 <- survSplit(dsChemo, cut=249, end="SurvTime", event="Status", start="start", id="id")
#Chemo.cp250=Chemo.cp250[order(Chemo.cp250$id, Chemo.cp250$start,])]
Chemo.cp250$Time1 <- Chemo.cp250$Rx*(Chemo.cp250$start<250)
Chemo.cp250$Time2 <- Chemo.cp250$Rx*(Chemo.cp250$start>=250)
Y250=Surv(Chemo.cp250$start, Chemo.cp250$SurvTime, Chemo.cp250$Status)
ChemoPh2<-coxph(Y250~Time1 + Time2, data=Chemo.cp250)
summary(ChemoPh2)
cutOff
cutOff <- 249
Chemo.cp250 <- survSplit(dsChemo, cut=cutOff, end="SurvTime", event="Status", start="start", id="id")
Chemo.cp250$Time1 <- Chemo.cp250$Rx*(Chemo.cp250$start<=cutOff)
Chemo.cp250$Time2 <- Chemo.cp250$Rx*(Chemo.cp250$start>cutOff)
Y250=Surv(Chemo.cp250$start, Chemo.cp250$SurvTime, Chemo.cp250$Status)
ChemoPh2<-coxph(Y250~Time1 + Time2, data=Chemo.cp250)
summary(ChemoPh2)
cutOff <- 249
Chemo.cp250 <- survSplit(dsChemo, cut=cutOff, end="SurvTime", event="Status", start="start", id="id")
#Chemo.cp250=Chemo.cp250[order(Chemo.cp250$id, Chemo.cp250$start,])]
Chemo.cp250$Time1 <- Chemo.cp250$Rx*(Chemo.cp250$start<=cutOff)
Chemo.cp250$Time2 <- Chemo.cp250$Rx*(Chemo.cp250$start>cutOff)
View(Chemo.cp250)
Chemo.cp250$Time1 <- Chemo.cp250$Rx*(Chemo.cp250$start<cutOff)
Chemo.cp250$Time2 <- Chemo.cp250$Rx*(Chemo.cp250$start>=cutOff)
Y250=Surv(Chemo.cp250$start, Chemo.cp250$SurvTime, Chemo.cp250$Status)
ChemoPh2<-coxph(Y250~Time1 + Time2, data=Chemo.cp250)
summary(ChemoPh2)
ptProcessChemo$Time1 <- ifelse(ptProcessChemo$tr<250, ptProcessChemo$rx*1, 0)
ptProcessChemo$Time2 <- ifelse(250<ptProcessChemo$tr, ptProcessChemo$rx*1, 0)
poissonChemo3<-glm(yir ~ I(as.factor(r)) + Time1 + Time2 + offset(I(log(dir))), family=poisson(link = "log"), data=ptProcessChemo)
summary(poissonChemo3)
summary(ChemoPh2)
ptProcessChemo$Time1 <- ifelse(ptProcessChemo$tr<250, ptProcessChemo$rx*1, 0)
ptProcessChemo$Time2 <- ifelse(250<=ptProcessChemo$tr, ptProcessChemo$rx*1, 0)
poissonChemo3<-glm(yir ~ I(as.factor(r)) + Time1 + Time2 + offset(I(log(dir))), family=poisson(link = "log"), data=ptProcessChemo)
summary(poissonChemo3)
summary(ChemoPh2)
cutOff <- 249.9
#Note that survSplit uses the cutoff to end one time period and ALSO begin the next period
#So, in order for this model to agree with our count process model,
#need to consider end points using <= and not < logic.
#In the example below, we'd like the endpoint to be < 250, so for survSplit we split the data using <= 249.
Chemo.cp250 <- survSplit(dsChemo, cut=cutOff, end="SurvTime", event="Status", start="start", id="id")
#Chemo.cp250=Chemo.cp250[order(Chemo.cp250$id, Chemo.cp250$start,])]
Chemo.cp250$Time1 <- Chemo.cp250$Rx*(Chemo.cp250$start<cutOff)
Chemo.cp250$Time2 <- Chemo.cp250$Rx*(Chemo.cp250$start>=cutOff)
Y250=Surv(Chemo.cp250$start, Chemo.cp250$SurvTime, Chemo.cp250$Status)
ChemoPh2<-coxph(Y250~Time1 + Time2, data=Chemo.cp250)
summary(ChemoPh2)
library(survival)
library(survrec)
#####################################
#Practice Questions
#####################################
#1) A recurrent event is an event (i.e. failure) that can occure mor ethan once over the follow0up on a given subject
#   TRUE
#2) The Counting Process approach is appropriate if a given sbject can experience more than one different type of
#   event over follow-up?
#   FALSE
#3) In the data layout for the Counting Process approach, a subject who has additional follow-up time after
#   having failed at time t(j), does not drop out of the risk set after time t(j).
#   TRUE
#4) The Couting Process approach requires hte use of a stratified Cox model
#   FALSE
#5) Using the Counting Process approach, if exactly two subjects fail at month t=10, but both these subjects have later
#   recurrent events, then the number in the risk set at the next ordered failure time does not decrease becuse of these two failures.
#   TRUE
#6) The goal of robust estimation for the counting process approach is to adjust estimated regression coefficients to accoutn for the
#   correlation of observation within subjects when previously no such correlation was assumed.
#   FALSE
#7) Robust estimation is recommended for the counting process approach but not for the alternative stratified Cox
#   approachs for analyzing recurrent event survival time.
#   FALSE
#8) The p-value obtained from using a robust standard error will always be larger than the corresponding p-value from using a
#   non-robust standard error.
#   FALSE
#9) The marginal approach uses the exact same (start, stop) data layout format used for the counting process approach, except that
#   for the marginal approach, the model used is a stratified Cox PH model rather than a standard PH model.
#   FALSE
#10) Suppose the maximum number of failures occuring for a given subject is five in a dataset to be analyzed using the marginal approach.
#    Then a subject who failed only twice will contribute five lines of data corresponding to his or her two failures and the three
#    additional failures that coud have possibly occorued for this subject.
#    TRUE
#11) Suppose the maximum number of failures occuring for a given subject is five in a dataset to be analyzed using the conditional 1 approach.
#    Then an interaction Stratified Cox model used to carry out this analysis will have the following general model form:
#    H(x,t)= hnullg(t) exp(B1g*X1+B2g*X2+...+BpgXp); g = 1,2,3,4,5.
#    TRUE
#12) Suppose a no-interaction Stratified Cox model using the conditional 1 approach is found (using a likelihood ratio test) not statistically
#    different froma  corresponding interaction stratified cox model. Then if the no-interaction model is used, it will not be possible to
#    separate out the effects of predictors within each stratum representing the recurring events on a given subject.
#    TRUE
#13) In choosing betwen the conditional 1 and the marginal approaches, the marginal approach would be preferred provided the different strata
#    clearly represent different event types.
#    TRUE
#14) When using an interaction stratified Cox model to analyze recurrent event data, the estimated regression coefficients and corresponding
#    standard errors for the first stratum always will be identical for conditional 1, conditional 2, and marginal approaches.
#    TRUE
#15) The choice among the Counting Process, conditional 1, conditional 2, and marginal approaches depends upon whether a no-interaction
#    stratified Cox or an interaction stratified Cox model is more appropriate for one's data.
#    FALSE
#16) Suppose that Allie, Sally, and Callie are the only three subjects in the dataset shown below. All three subjects have two recurrent events
#    that occur at different event times
ID<-c("A", "A", "S", "S", "C", "C")
Status<-c("1")
Stratum<-c(1,2,1,2,1,2)
Start<-c(0, 70, 0, 20, 0, 10)
Stop<-c(70, 90, 20, 30, 10, 40)
tx<-c(1,1,0,0,1,1)
ds<-cbind(ID, Status, Stratum, Start, Stop, tx)
ds<-as.data.frame(ds)
ds
ID<-c("B", "B", "R", "R")
Status<-1
Stratum<-c(1, 2, 1, 2)
Start<-c(0, 12, 0, 20)
Stop<-c(12, 16, 20, 23)
ds<-cbind(ID, Status, Stratum, Start, Stop)
ds<-as.data.frame(ds)
ds
survObject<-Surv(time=as.numeric(as.vector(ds$Start)), time2=as.numeric(as.vector(ds$Stop)), event=ds$Status==1)
survlayout1A<-summary(survfit(survObject~strata(Stratum), data=ds))
survlayout1A
ds$gaptime<-as.numeric(as.vector(ds$Stop))-as.numeric(as.vector(ds$Start))
survObject<-Surv(time=as.numeric(as.vector(ds$gaptime)), event=ds$Status==1)
survlayout1D<-summary(survfit(survObject~strata(Stratum), data=ds))
survlayout1D
dat8_2 <- c("01 1 0 39 0 0 12 1 0 39 0 1
01 1 39 66 0 0 12 1 39 80 0 1
01 1 66 97 0 0 12 0 80 107 0 1
02 1 0 34 0 1 13 1 0 36 0 1
02 1 34 65 0 1 13 1 36 64 0 1
02 1 65 100 0 1 13 1 64 95 0 1
03 1 0 36 0 0 14 1 0 46 0 1
03 1 36 67 0 0 14 1 46 77 0 1
03 1 67 96 0 0 14 0 77 111 0 1
04 1 0 40 0 0 15 1 0 61 0 1
04 1 40 80 0 0 15 1 61 79 0 1
04 0 80 111 0 0 15 0 79 111 0 1
05 1 0 45 0 0 16 1 0 57 0 1
05 1 45 68 0 0 16 0 57 79 0 1
05 . 68 . 0 0 16 . 79 . 0 1
06 1 0 33 0 1 17 1 0 37 0 1
06 1 33 66 0 1 17 1 37 76 0 1
06 1 66 96 0 1 17 0 76 113 0 1
07 1 0 34 0 1 18 1 0 58 0 1
07 1 34 67 0 1 18 1 58 67 0 1
07 1 67 93 0 1 18 0 67 109 0 1
08 1 0 39 0 1 19 1 0 58 1 1
08 1 39 72 0 1 19 1 58 63 1 1
08 1 72 102 0 1 19 1 63 106 1 1
09 1 0 39 0 1 20 1 0 45 1 0
09 1 39 79 0 1 20 1 45 72 1 0
09 0 79 109 0 1 20 1 72 106 1 0
10 1 0 36 0 0 21 1 0 48 1 0
10 1 36 65 0 0 21 1 48 81 1 0
10 1 65 96 0 0 21 1 81 112 1 0
11 1 0 39 0 0 22 1 0 38 1 1
11 1 39 78 0 0 22 1 38 64 1 1
11 1 78 108 0 0 22 1 64 97 1 1
23 1 0 51 1 1 30 1 0 57 1 0
23 1 51 69 1 1 30 1 57 78 1 0
23 0 69 98 1 1 30 1 78 99 1 0
24 1 0 43 1 1 31 1 0 44 1 1
24 1 43 67 1 1 31 1 44 74 1 1
24 0 67 111 1 1 31 1 74 96 1 1
25 1 0 46 1 0 32 1 0 38 1 1
25 1 46 66 1 0 32 1 38 71 1 1
25 1 66 110 1 0 32 1 71 105 1 1
26 1 0 33 1 1 33 1 0 38 1 1
26 1 33 68 1 1 33 1 38 64 1 1
26 1 68 96 1 1 33 1 64 97 1 1
27 1 0 51 1 1 34 1 0 38 1 1
27 1 51 97 1 1 34 1 38 63 1 1
27 0 97 115 1 1 34 1 63 99 1 1
28 1 0 37 1 0 35 1 0 49 1 1
28 1 37 79 1 0 35 1 49 70 1 1
28 1 79 93 1 0 35 0 70 107 1 1
29 1 0 41 1 1 36 1 0 34 1 1
29 1 41 73 1 1 36 1 34 81 1 1
29 0 73 111 1 1 36 1 81 97 1 1")
dat8_2
?strsplit
strsplit(dat8_2,fixed=T)
strsplit(dat8_2,split="\s|\n")
strsplit(dat8_2,split="\\s|\\n")
dat8_2b <- strsplit(dat8_2,split="\\s|\\n")
dat8_2b <- unlist(strsplit(dat8_2,split="\\s|\\n"))
?as.data.frame
as.data.frame(unlist(strsplit(dat8_2,split="\\s|\\n")),ncol=6)
as.matrix(c(1:6),ncol=2)
as.matrix(c(1:6),nrow=3,ncol=2)
matrix(c(1:6),nrow=3,ncol=2)
dat8_2b <- data.frame(as.matrix(unlist(strsplit(dat8_2,split="\\s|\\n")),ncol=6))
View(dat8_2b)
36*3
?matrix
matrix(c(1:6),nrow=3,ncol=2,byrow=T)
matrix(unlist(strsplit(dat8_2,split="\\s|\\n")),ncol=6,byrow=T)
dat8_2b <- data.frame(matrix(unlist(strsplit(dat8_2,split="\\s|\\n")),ncol=6,byrow=T))
View(dat8_2b)
colnames(dat8_2b) <- c("id","event","start","stop","tx","smoking")
View(dat8_2b)
View(dat8_2b)
dat8_2c <- dat8_2b[order(dat8_2b$id,dat8_2b$start),]
View(dat8_2c)
rm(dat8_2b,dat8_2)
apply(dat8_2c,2,class)
dat8_2b <- data.frame(matrix(as.numeric(unlist(strsplit(dat8_2,split="\\s|\\n")),ncol=6,byrow=T))
dat8_2b <- data.frame(matrix(as.numeric(unlist(strsplit(dat8_2,split="\\s|\\n"))),ncol=6,byrow=T))
dat8_2 <- c("01 1 0 39 0 0 12 1 0 39 0 1
01 1 39 66 0 0 12 1 39 80 0 1
01 1 66 97 0 0 12 0 80 107 0 1
02 1 0 34 0 1 13 1 0 36 0 1
02 1 34 65 0 1 13 1 36 64 0 1
02 1 65 100 0 1 13 1 64 95 0 1
03 1 0 36 0 0 14 1 0 46 0 1
03 1 36 67 0 0 14 1 46 77 0 1
03 1 67 96 0 0 14 0 77 111 0 1
04 1 0 40 0 0 15 1 0 61 0 1
04 1 40 80 0 0 15 1 61 79 0 1
04 0 80 111 0 0 15 0 79 111 0 1
05 1 0 45 0 0 16 1 0 57 0 1
05 1 45 68 0 0 16 0 57 79 0 1
05 . 68 . 0 0 16 . 79 . 0 1
06 1 0 33 0 1 17 1 0 37 0 1
06 1 33 66 0 1 17 1 37 76 0 1
06 1 66 96 0 1 17 0 76 113 0 1
07 1 0 34 0 1 18 1 0 58 0 1
07 1 34 67 0 1 18 1 58 67 0 1
07 1 67 93 0 1 18 0 67 109 0 1
08 1 0 39 0 1 19 1 0 58 1 1
08 1 39 72 0 1 19 1 58 63 1 1
08 1 72 102 0 1 19 1 63 106 1 1
09 1 0 39 0 1 20 1 0 45 1 0
09 1 39 79 0 1 20 1 45 72 1 0
09 0 79 109 0 1 20 1 72 106 1 0
10 1 0 36 0 0 21 1 0 48 1 0
10 1 36 65 0 0 21 1 48 81 1 0
10 1 65 96 0 0 21 1 81 112 1 0
11 1 0 39 0 0 22 1 0 38 1 1
11 1 39 78 0 0 22 1 38 64 1 1
11 1 78 108 0 0 22 1 64 97 1 1
23 1 0 51 1 1 30 1 0 57 1 0
23 1 51 69 1 1 30 1 57 78 1 0
23 0 69 98 1 1 30 1 78 99 1 0
24 1 0 43 1 1 31 1 0 44 1 1
24 1 43 67 1 1 31 1 44 74 1 1
24 0 67 111 1 1 31 1 74 96 1 1
25 1 0 46 1 0 32 1 0 38 1 1
25 1 46 66 1 0 32 1 38 71 1 1
25 1 66 110 1 0 32 1 71 105 1 1
26 1 0 33 1 1 33 1 0 38 1 1
26 1 33 68 1 1 33 1 38 64 1 1
26 1 68 96 1 1 33 1 64 97 1 1
27 1 0 51 1 1 34 1 0 38 1 1
27 1 51 97 1 1 34 1 38 63 1 1
27 0 97 115 1 1 34 1 63 99 1 1
28 1 0 37 1 0 35 1 0 49 1 1
28 1 37 79 1 0 35 1 49 70 1 1
28 1 79 93 1 0 35 0 70 107 1 1
29 1 0 41 1 1 36 1 0 34 1 1
29 1 41 73 1 1 36 1 34 81 1 1
29 0 73 111 1 1 36 1 81 97 1 1")
dat8_2b <- data.frame(matrix(as.numeric(unlist(strsplit(dat8_2,split="\\s|\\n"))),ncol=6,byrow=T))
View(dat8_2b)
dat8_2c <- dat8_2b[order(dat8_2b$id,dat8_2b$start),]
colnames(dat8_2b) <- c("id","event","start","stop","tx","smoking")
dat8_2c <- dat8_2b[order(dat8_2b$id,dat8_2b$start),]
View(dat8_2c)
rm(dat8_2b,dat8_2)
require(survival)
?coxph
?surv
?Surv
survObj <- Surv(time=dat8_2c$start, time2=dat8_2c$stop,event=dat8_2c$event==1)
cpMod2 <- coxph(survObj,ties="breslow")
cpMod2 <- coxph(data=dat8_2c, Surv(time=start, time2=stop,event=event==1) ~ tx+smoking,ties="breslow")
cpMod2 <- coxph(data=dat8_2c, Surv(time=start, time2=stop,event=event==1) ~ tx+smoking,ties="breslow",robust=T)
cpMod2 <- coxph(data=dat8_2c, Surv(time=start, time2=stop,event=event==1) ~ tx+smoking,ties="breslow",robust=T)
cpMod2 <- coxph(data=dat8_2c, Surv(time=start, time2=stop,event=event==1) ~ tx+smoking+cluster(id),ties="breslow")
summary(cpMod2)
cpMod2 <- coxph(data=dat8_2c, Surv(time=start, time2=stop,event=event==1) ~ tx+smoking,ties="breslow",robust=T)
summary(cpMod2)
cpMod2 <- coxph(data=dat8_2c, Surv(time=start, time2=stop,event=event==1) ~ tx+cluster(id),ties="breslow")
summary(cpMod2)
dim(dat8_2c)
rep(1:3,36)
dat8_2c$eventOcc <- rep(1:3,36)
scpMod2 <- coxph(data=dat8_2c, Surv(time=start, time2=stop,event=event==1) ~ tx+smoking+cluster(id)+strata(eventOcc),ties="breslow")
summary(scpMod2)
dat8_2c$gapTime <- dat8_2c$stop - dat8_2c$start
head(dat8_2c)
dat8_2c$gapTime <- dat8_2c$stop - dat8_2c$start
dat8_2c$newStart <- 0
head(dat8_2c)
cpMod2 <- coxph(data=dat8_2c, Surv(time=start, time2=stop,event=event==1) ~ tx+smoking+cluster(id))
#cpMod2 <- coxph(data=dat8_2c, Surv(time=start, time2=stop,event=event==1) ~ tx+smoking,ties="breslow",robust=T)
summary(cpMod2)
gapMod2 <- coxph(data=dat8_2c, Surv(time=newStart, time2=gapTime,event=event==1) ~ tx+smoking+cluster(id)+strata(eventOcc),ties="breslow")
summary(gapMod2)
View(dat8_2c)
lastStop <- function(d){
d$newStop <- ifelse(is.na(dat8_2c$stop),max(dat8_2c$stop,na.rm=T),dat8_2c$stop)
}
dat8_2d <- ddply(dat8_2c,.(id),lastStop)
require(plyr)
lastStop <- function(d){
d$newStop <- ifelse(is.na(dat8_2c$stop),max(dat8_2c$stop,na.rm=T),dat8_2c$stop)
}
dat8_2d <- ddply(dat8_2c,.(id),lastStop)
lastStop <- function(d){
d$newStop <- ifelse(is.na(d$stop),max(d$stop,na.rm=T),d$stop)
}
dat8_2d <- ddply(dat8_2c,.(id),lastStop)
head(dat8_2d)
ddply(dat8_2c,.(id),lastStop)
?ddply
dat8_2d <- ddply(dat8_2c,"id",lastStop)
head(dat8_2d)
lastStop
lastStop <- function(d){
d$newStop <- ifelse(is.na(d$stop),max(d$stop,na.rm=T),d$stop)
return(d)
}
dat8_2d <- ddply(dat8_2c,"id",lastStop)
head(dat8_2d)
head(dat8_2d,50)
lastStop <- function(d){
d$newStop <- ifelse(is.na(d$stop),max(d$stop,na.rm=T),d$stop)
d$newEvent <- ifelse(is.na(d$event),0,d$event)
return(d)
}
dat8_2d <- ddply(dat8_2c,"id",lastStop)
head(dat8_2d,50)
mrgMod2 <- coxph(data=dat8_2d, Surv(time=newStop, event=newEvent==1) ~ tx+smoking+cluster(id)+strata(eventOcc),ties="breslow")
summary(mrgMod2)
gapMod2 <- coxph(data=dat8_2c, Surv(time=gapTime,event=event==1) ~ tx+smoking+cluster(id)+strata(eventOcc),ties="breslow")
summary(gapMod2)
gapMod2 <- coxph(data=dat8_2c, Surv(time=newStart, time2=gapTime,event=event==1) ~ tx+smoking+cluster(id)+strata(eventOcc),ties="breslow")
summary(gapMod2)
dsBladder <- read.dta("http://web1.sph.emory.edu/dkleinb/allDatasets/surv2datasets/bladder.dta")
?read.dta
require(foreign)
dsBladder <- read.dta("http://web1.sph.emory.edu/dkleinb/allDatasets/surv2datasets/bladder.dta")
?dsBladder
View(dsBladder)
View(dsBladder)
cpApxMod <- coxph(data=dsBladder, Surv(time=start, time2=stop,event=event==1) ~ tx+num+size+cluster(id),ties="breslow")
cpApxMod <- coxph(data=dsBladder[!dsBladder$start==dsBladder$stop,], Surv(time=start, time2=stop,event=event==1) ~ tx+num+size+cluster(id),ties="breslow")
summary(cpApxMod)
scpApxMod <- coxph(data=dsBladder[!dsBladder$start==dsBladder$stop,], Surv(time=start, time2=stop,event=event==1) ~ tx+num+size+cluster(id)+strata(interval),
ties="breslow")
scpApxMod <- coxph(data=dsBladder[!dsBladder$start==dsBladder$stop,], Surv(time=start, time2=stop,event=event==1) ~ tx+num+size+cluster(id)+strata(interval),
ties="breslow")
summary(scpApxMod)
summary(cpApxMod)
cpApxMod <- coxph(data=dsBladder[!dsBladder$start==dsBladder$stop,], Surv(time=start, time2=stop,event=event==1) ~ tx+num+size+cluster(id))
summary(cpApxMod)
View(dat8_2c)
cpMod2 <- coxph(data=dat8_2c[!is.na(dat8_2c),], Surv(time=start, time2=stop,event=event==1) ~ tx+smoking+cluster(id),ties="breslow")
#cpMod2 <- coxph(data=dat8_2c, Surv(time=start, time2=stop,event=event==1) ~ tx+smoking,ties="breslow",robust=T)
summary(cpMod2)
cpMod2 <- coxph(data=dat8_2c, Surv(time=start, time2=stop,event=event==1) ~ tx+smoking+cluster(id),ties="breslow")
#cpMod2 <- coxph(data=dat8_2c, Surv(time=start, time2=stop,event=event==1) ~ tx+smoking,ties="breslow",robust=T)
summary(cpMod2)
cpMod2 <- coxph(data=dat8_2c[!is.na(dat8_2c$event),], Surv(time=start, time2=stop,event=event==1) ~ tx+smoking+cluster(id),ties="breslow")
#cpMod2 <- coxph(data=dat8_2c, Surv(time=start, time2=stop,event=event==1) ~ tx+smoking,ties="breslow",robust=T)
summary(cpMod2)
cpMod2 <- coxph(data=dat8_2c, Surv(time=start, time2=stop,event=event==1) ~ tx+smoking+cluster(id),ties="breslow")
#cpMod2 <- coxph(data=dat8_2c, Surv(time=start, time2=stop,event=event==1) ~ tx+smoking,ties="breslow",robust=T)
summary(cpMod2)
