{
    "contents" : "rm(list = ls(all.names = TRUE))\nlibrary(foreign)\nlibrary(plyr)\n\nsetwd(\"S:/CCAN/CCANResEval/MIECHV/RedCap/Chomp/DataSnapshots/C1/Activity/2015-04-10\")\nds<-read.csv(\"childrenfirstdata.csv\")\nsetwd(\"C:/Users/APETERS4/Documents/GitHub/SurvivalExercises/SurvivalExercises/SurvivalExercises/Andrew\")\n\n\n\nCHILD_GNAME<-ds$Child_First_Name_4610\nCHILD_LNAME<-ds$Child_Last_Name_6756\n\n#CHild_DOB > IDOB; MM/DD/YYYY\nIDOB<-ds$CHild_DOB\n\n#Infant_Gender_4634 > INFANT_SEX; MFU\n\nINFANT_SEX<-ifelse(ds$Infant_Gender_4634==\"Female\", \"F\", ifelse(ds$Infant_Gender_4634==\"Male\", \"M\", \"U\"))\ntable(ds$Infant_Gender_4634)\ntable(INFANT_SEX)\n\n#Clientfirst>MOTHER_GNAME\nMOTHER_GNAME<-ds$clientfirst\n\n#Clientlast>MOTHER_LNAME\nMOTHER_LNAME<-ds$clientlast\n\n#dob > MODB \nMDOB<-ds$dob\n\n#MRACEBRT>...PCG_racecat and PCG_racec are apparently identical but it isn't clear how to turn cf format into VR format\n\ncolnames(ds)\ntable(ds$PCG_racecat)\ntable(ds$PCG_racec)\n\n#marital>MARRIED_NOW; Y, N\n#Married, Separated=Y\n#Divorced, never married, widowed, = N\n#\"\" = \"\"\n\nMARRIED_NOW<-ifelse(ds$marital==\"Married\" | ds$marital==\"Separated\", \"Y\", ifelse(ds$marital==\"Divorced\" |ds$marital==\"Never married\" | ds$marital==\"Widowed\", \"N\", \"\"))\n\ntable(ds$marital)\ntable(MARRIED_NOW)\n\n#PCG_SSN into MSSN; turn XXXXXXXXX into XXX-XX-XXXX\n#http://stackoverflow.com/questions/13863599/insert-a-character-at-a-specific-location-in-a-string\n\nsplit_str_by_index <- function(target, index) {\n  index <- sort(index)\n  substr(rep(target, length(index) + 1),\n         start = c(1, index),\n         stop = c(index -1, nchar(target)))\n}\n\n#Taken from https://stat.ethz.ch/pipermail/r-help/2006-March/101023.html\ninterleave <- function(v1,v2)\n{\n  ord1 <- 2*(1:length(v1))-1\n  ord2 <- 2*(1:length(v2))\n  c(v1,v2)[order(c(ord1,ord2))]\n}\n\ninsert_str <- function(target, insert, index) {\n  insert <- insert[order(index)]\n  index <- sort(index)\n  paste(interleave(split_str_by_index(target, index), insert), collapse=\"\")\n}\n\nMSSN<-vector()\n\nfor(i in 1:length(ds$PCG_SSN)){\n  if (ds$PCG_SSN[i]==\"NA\" | is.na(ds$PCG_SSN[i])==TRUE){\n    next\n  } \n  MSSN[i]<-insert_str(ds$PCG_SSN[i], c(\"-\",\"-\"), c(4,6))\n}\nMSSN[1:10]\nPCG_SSN[1:10]\n\n\n#address1>MAIL_ADDR1\n#address2>MAIL_ADDR2\n#city>MAIL_CITY\n#zip>MAIL_ZIP\n\nRES_ADDR1<-ds$address1\nRES_ADDR2<-ds$address2\nRES_CITY<-ds$city\nRES_ZIP<-ds$zip\n\n#address1>MAIL_ADDR1\n#address2>MAIL_ADDR2\n#city>MAIL_CITY\n#zip>MAIL_ZIP\n\nMAIL_ADDR1<-ds$address1\nMAIL_ADDR2<-ds$address2\nMAIL_CITY<-ds$city\nMAIL_ZIP<-ds$zip\n\n\n#PCG_ethnic>METHNIC_NO; N=Not Mexican/Chicana; H=Yes, U=unknown\n#Formatting of VR data is ambiguous; Y=NO, Not spanish/hispanic/latina?\n#BE SURE TO DOUBLE CHECK THIS ONE\ntable(ds$PCG_ethnic)\ntable(ds$ethnicity_c)\n\nMETHNIC_NO<-ifelse(ds$PCG_ethnic==\"Hispanic\", \"N\", \"Y\")\ntable(METHNIC_NO)\n\ntable(ds$racec)\ntable(ds$PCG_racecat)\n\n#PCG_racecat>MRACE1; Y=White, N= not white\nMRACE1<-ifelse(ds$PCG_racecat==\"White\", \"Y\", \"N\")\ntable(MRACE1)\n\n#PCG_racecat>MRACE2; Y=Black/African American, N\nMRACE2<-ifelse(ds$PCG_racecat==\"Black or African American\", \"Y\", \"N\")\ntable(MRACE2)\n\n#PCG_racecat>MRACE3; Y=American Indian/Alaskan Native, N\nMRACE3<-ifelse(ds$PCG_racecat==\"American Indian or Alaska Native\", \"Y\", \"N\")\ntable(MRACE3)\n\ndsNew<-cbind(MOTHER_LNAME, MOTHER_GNAME, MSSN, MDOB, MRACE1, MRACE2, MRACE3, METHNIC_NO, RES_ADDR1, RES_ADDR2, RES_CITY, RES_ZIP, MARRIED_NOW, CHILD_LNAME, CHILD_GNAME, INFANT_SEX, IDOB)\n",
    "created" : 1429474880597.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4148053082",
    "id" : "574D44BD",
    "lastKnownWriteTime" : 1429488120,
    "path" : "~/GitHub/SurvivalExercises/SurvivalExercises/SurvivalExercises/Andrew/cfirstToVRNew.R",
    "project_path" : "Andrew/cfirstToVRNew.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}